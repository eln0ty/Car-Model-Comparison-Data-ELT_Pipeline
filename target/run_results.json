{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.11", "generated_at": "2025-10-05T06:07:41.243113Z", "invocation_id": "ad1a37f7-97bb-4257-a69d-5a6b971e6b8b", "invocation_started_at": "2025-10-05T06:07:32.843952Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:40.710576Z", "completed_at": "2025-10-05T06:07:40.789855Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:40.790720Z", "completed_at": "2025-10-05T06:07:40.790748Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0841364860534668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cars_details.dim_date", "compiled": true, "compiled_code": "\n\nselect\n    date_day as date,\n    extract(year  from date_day)::int  as year,\n    extract(month from date_day)::int  as month,\n    extract(day   from date_day)::int  as day,\n    to_char(date_day,'YYYYMMDD')::int  as date_key\nfrom (\n    \n\n\n\n\n\nwith rawdata as (\n\n    \n\n    \n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    \n    p0.generated_number * power(2, 0)\n     + \n    \n    p1.generated_number * power(2, 1)\n     + \n    \n    p2.generated_number * power(2, 2)\n     + \n    \n    p3.generated_number * power(2, 3)\n     + \n    \n    p4.generated_number * power(2, 4)\n     + \n    \n    p5.generated_number * power(2, 5)\n     + \n    \n    p6.generated_number * power(2, 6)\n     + \n    \n    p7.generated_number * power(2, 7)\n     + \n    \n    p8.generated_number * power(2, 8)\n     + \n    \n    p9.generated_number * power(2, 9)\n     + \n    \n    p10.generated_number * power(2, 10)\n     + \n    \n    p11.generated_number * power(2, 11)\n     + \n    \n    p12.generated_number * power(2, 12)\n     + \n    \n    p13.generated_number * power(2, 13)\n    \n    \n    + 1\n    as generated_number\n\n    from\n\n    \n    p as p0\n     cross join \n    \n    p as p1\n     cross join \n    \n    p as p2\n     cross join \n    \n    p as p3\n     cross join \n    \n    p as p4\n     cross join \n    \n    p as p5\n     cross join \n    \n    p as p6\n     cross join \n    \n    p as p7\n     cross join \n    \n    p as p8\n     cross join \n    \n    p as p9\n     cross join \n    \n    p as p10\n     cross join \n    \n    p as p11\n     cross join \n    \n    p as p12\n     cross join \n    \n    p as p13\n    \n    \n\n    )\n\n    select *\n    from unioned\n    where generated_number <= 9774\n    order by generated_number\n\n\n\n),\n\nall_periods as (\n\n    select (\n        \n\n    '2000-01-01'::date + ((interval '1 day') * (row_number() over (order by generated_number) - 1))\n\n\n    ) as date_day\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_day <= (current_date + interval '1 year')::date\n\n)\n\nselect * from filtered\n\n\n) as spine", "relation_name": "\"cars\".\"public\".\"dim_date\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:40.797604Z", "completed_at": "2025-10-05T06:07:40.799352Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:40.800255Z", "completed_at": "2025-10-05T06:07:40.800275Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.004347801208496094, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.cars_details.car_details", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:40.803697Z", "completed_at": "2025-10-05T06:07:40.823618Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:40.824811Z", "completed_at": "2025-10-05T06:07:40.824835Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02267146110534668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cars_details.stg_car_details", "compiled": true, "compiled_code": "\n\nselect\n  md5(concat_ws('||',\n    coalesce(make,''), \n    coalesce(model,''), \n    coalesce(year::text,''), \n    coalesce(location,''), \n    coalesce(price::text,''), \n    coalesce(kilometer::text,''), \n    coalesce(fuel_type,''), \n    coalesce(transmission,'')\n  )) as car_id,\n  lower(trim(make)) as make,\n  lower(trim(model)) as model,\n  cast(year as int) as year,\n  cast(price as numeric) as price,\n  (kilometer)::int as mileage,\n  trim(color) as color,\n  trim(transmission) as transmission,\n  trim(fuel_type) as fuel_type,\n  trim(location) as country,\n  current_timestamp as _ingested_at\nfrom \"cars\".\"public_raw\".\"car_details\"", "relation_name": "\"cars\".\"public\".\"stg_car_details\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:40.828921Z", "completed_at": "2025-10-05T06:07:40.832202Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:40.832866Z", "completed_at": "2025-10-05T06:07:40.832881Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0056536197662353516, "adapter_response": {}, "message": null, "failures": null, "unique_id": "snapshot.cars_details.car_details_snapshot", "compiled": true, "compiled_code": "\n\n\nselect\n  md5(concat_ws('||',\n    coalesce(make,''), coalesce(model,''), coalesce(year::text,''),\n    coalesce(location,''), coalesce(owner,''), coalesce(seller_type,''),\n    coalesce(transmission,''), coalesce(fuel_type,''), coalesce(color,''),\n    coalesce(kilometer::text,'')\n  )) as row_id,\n  *\nfrom \"cars\".\"public_raw\".\"car_details\"\n", "relation_name": "\"cars\".\"snapshots\".\"car_details_snapshot\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:40.835633Z", "completed_at": "2025-10-05T06:07:40.870641Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:40.871842Z", "completed_at": "2025-10-05T06:07:40.871862Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.037523508071899414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cars_details.accepted_values_car_details_transmission__Manual__Automatic.a870d726ae", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        transmission as value_field,\n        count(*) as n_records\n\n    from \"cars\".\"public_raw\".\"car_details\"\n    group by transmission\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Manual','Automatic'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:40.875868Z", "completed_at": "2025-10-05T06:07:40.897590Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:40.898302Z", "completed_at": "2025-10-05T06:07:40.898317Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02439403533935547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cars_details.not_null_car_details_fuel_type.a638dc69d1", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect fuel_type\nfrom \"cars\".\"public_raw\".\"car_details\"\nwhere fuel_type is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:40.902839Z", "completed_at": "2025-10-05T06:07:40.921320Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:40.922368Z", "completed_at": "2025-10-05T06:07:40.922385Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.022033214569091797, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cars_details.not_null_car_details_kilometer.df91e5c7c5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect kilometer\nfrom \"cars\".\"public_raw\".\"car_details\"\nwhere kilometer is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:40.925304Z", "completed_at": "2025-10-05T06:07:40.941875Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:40.942549Z", "completed_at": "2025-10-05T06:07:40.942563Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0183258056640625, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cars_details.not_null_car_details_make.669e84e002", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect make\nfrom \"cars\".\"public_raw\".\"car_details\"\nwhere make is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:40.944965Z", "completed_at": "2025-10-05T06:07:40.962285Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:40.963096Z", "completed_at": "2025-10-05T06:07:40.963123Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.019466400146484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cars_details.not_null_car_details_model.c2b16854f5", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect model\nfrom \"cars\".\"public_raw\".\"car_details\"\nwhere model is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:40.969904Z", "completed_at": "2025-10-05T06:07:40.989168Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:40.989902Z", "completed_at": "2025-10-05T06:07:40.989920Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.023530960083007812, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cars_details.not_null_car_details_price.46d58ea92a", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"cars\".\"public_raw\".\"car_details\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:40.992488Z", "completed_at": "2025-10-05T06:07:41.066376Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:41.067098Z", "completed_at": "2025-10-05T06:07:41.067113Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.07588601112365723, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cars_details.not_null_car_details_year.cb30a57047", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect year\nfrom \"cars\".\"public_raw\".\"car_details\"\nwhere year is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:41.069822Z", "completed_at": "2025-10-05T06:07:41.084508Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:41.085282Z", "completed_at": "2025-10-05T06:07:41.085300Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.016621112823486328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cars_details.int_car_features", "compiled": true, "compiled_code": "\n\nselect\n  car_id,\n  make,\n  model,\n  year,\n  price,\n  mileage,\n  case when mileage is null then 'unknown'\n       when mileage < 20000 then 'low'\n       when mileage < 100000 then 'medium'\n       else 'high' end as mileage_band,\n  case when price < 5000 then 'budget'\n       when price < 20000 then 'mid'\n       else 'premium' end as price_band,\n  country,\n  transmission,\n  fuel_type\nfrom \"cars\".\"public\".\"stg_car_details\"", "relation_name": "\"cars\".\"public\".\"int_car_features\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:41.089010Z", "completed_at": "2025-10-05T06:07:41.117390Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:41.119197Z", "completed_at": "2025-10-05T06:07:41.119219Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03255891799926758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cars_details.dbt_expectations_expect_column_values_to_be_between_stg_car_details_year__2030__1980.548f7a6556", "compiled": true, "compiled_code": "\n\n\n\n\n\n\n    with grouped_expression as (\n    select\n        \n        \n    \n  \n( 1=1 and year >= 1980 and year <= 2030\n)\n as expression\n\n\n    from \"cars\".\"public\".\"stg_car_details\"\n    \n\n),\nvalidation_errors as (\n\n    select\n        *\n    from\n        grouped_expression\n    where\n        not(expression = true)\n\n)\n\nselect *\nfrom validation_errors\n\n\n\n\n\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:41.123801Z", "completed_at": "2025-10-05T06:07:41.139552Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:41.140527Z", "completed_at": "2025-10-05T06:07:41.140545Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01893925666809082, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cars_details.not_null_stg_car_details_price.75e1f24c9f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect price\nfrom \"cars\".\"public\".\"stg_car_details\"\nwhere price is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:41.143481Z", "completed_at": "2025-10-05T06:07:41.161920Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:41.162622Z", "completed_at": "2025-10-05T06:07:41.162635Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02037501335144043, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cars_details.dim_car", "compiled": true, "compiled_code": "\n\nselect\n  md5(concat_ws('||', make, model, year)) as car_sk,\n  make, model, year\nfrom \"cars\".\"public\".\"int_car_features\"\ngroup by 2,3,4", "relation_name": "\"cars\".\"public\".\"dim_car\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:41.165472Z", "completed_at": "2025-10-05T06:07:41.208492Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:41.209338Z", "completed_at": "2025-10-05T06:07:41.209354Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.045777320861816406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.cars_details.fact_listing", "compiled": true, "compiled_code": "\n\n\n\n\n  \n  \n\n\nselect\n    md5(concat_ws('||', c.car_id::text, c._ingested_at::text)) as fact_id,\n    c.car_id,\n    d.car_sk,\n    f.price,\n    f.mileage,\n    f.mileage_band,\n    f.price_band,\n    f.country,\n    f.transmission,\n    f.fuel_type,\n    c._ingested_at\nfrom \"cars\".\"public\".\"int_car_features\" f\njoin \"cars\".\"public\".\"dim_car\" d\n  on d.make  = f.make\n and d.model = f.model\n and d.year  = f.year\njoin \"cars\".\"public\".\"stg_car_details\" c\n  on c.car_id = f.car_id\n\n  where c._ingested_at > '2025-10-05 05:02:52.960576+00:00'::timestamp\n", "relation_name": "\"cars\".\"public\".\"fact_listing\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-05T06:07:41.213273Z", "completed_at": "2025-10-05T06:07:41.239536Z"}, {"name": "execute", "started_at": "2025-10-05T06:07:41.240243Z", "completed_at": "2025-10-05T06:07:41.240256Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.02862858772277832, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.cars_details.not_null_fact_listing_car_id.e4b9d22ff4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect car_id\nfrom \"cars\".\"public\".\"fact_listing\"\nwhere car_id is null\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 0.675764799118042, "args": {"state_modified_compare_more_unrendered_values": false, "state_modified_compare_vars": false, "empty_catalog": false, "use_fast_test_edges": false, "cache_selected_only": false, "require_yaml_configuration_for_mf_time_spines": false, "exclude": [], "write_json": true, "static_parser": true, "strict_mode": false, "favor_state": false, "log_level": "info", "introspect": true, "log_format_file": "debug", "project_dir": "/mnt/l/elt_project/cars_details", "require_explicit_package_overrides_for_builtin_materializations": true, "print": true, "require_generic_test_arguments_property": true, "vars": {}, "printer_width": 80, "show_all_deprecations": false, "compile": true, "show_resource_report": false, "skip_nodes_if_on_run_start_fails": false, "which": "generate", "macro_debugging": false, "static": false, "partial_parse_file_diff": true, "log_path": "/mnt/l/elt_project/cars_details/logs", "source_freshness_run_project_hooks": true, "partial_parse": true, "validate_macro_args": false, "defer": false, "require_resource_names_without_spaces": true, "indirect_selection": "eager", "upload_to_artifacts_ingest_api": false, "invocation_command": "dbt docs generate", "log_level_file": "debug", "profiles_dir": "/home/raymon/.dbt", "require_batched_execution_for_custom_microbatch_strategy": false, "use_colors": true, "log_file_max_bytes": 10485760, "require_all_warnings_handled_by_warn_error": false, "version_check": true, "require_nested_cumulative_type_params": false, "quiet": false, "send_anonymous_usage_stats": true, "warn_error_options": {"error": [], "warn": [], "silence": []}, "use_colors_file": true, "populate_cache": true, "select": [], "log_format": "default"}}